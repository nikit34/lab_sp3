(define variant 24)
(define last-digit-of-group-number 8)
(define kinds-of-coins 6)

(define (first-denomination kinds-of-coins)
  (cond ((= kinds-of-coins 1) 1)
        ((= kinds-of-coins 2) 2)
        ((= kinds-of-coins 3) 15)
        ((= kinds-of-coins 4) 20)
        ((= kinds-of-coins 5) 25)
        ((= kinds-of-coins 6) 50)
        (else 0)
        )
  )

(define (count-change amount)
  (display("______\n amount: "))
  (display(amount))
  (newline)
  (display("KINDS-OF-COINS: "))
  (display(kinds-of-coins))
  (newline)
  (let(
       (largest-coin (first-denomination kinds-of-coins))
       (display(largest-coin))
       (newline)
        (cond (and (> amount 0) (> kinds-of-coins 0) (> largest-coin 0)) (
               (display( "List of coin denominations: "))
               (first-denomination kinds-of-coins)
               (cc amount kinds-of-coins)
               )
              (else (display "Improper parametr value!\ncount-change= ") -1)
        )
    )
  )
)

(define (pier-Q x-Q y-Q)
  (not (or x-Q y-Q))
  )

(define (cc amount kinds-of-coins)
  (cond ((= amount 0) 1)(
         (pier-Q (< amount 0) (= kinds-of-coins 0))
         (+ (cc amount (- kinds-of-coins 1)) (cc (- amount (first-denomination kinds-of-coins)) kinds-of-coins)))
        (else 0)
    )
  )

(define (denomination-list kinds-of-coins)
  (cond ((= kinds-of-coins 0)
         ((newline) 0)
         (else (display((first-denomination kinds-of-coins))
               (display(" "))
               (denomination-list (- kinds-of-coins 1))
           )
    )
  )


(define (gr-amount)
  (remainder (+ (* 100 last-digit-of-group-number) variant) 231)
  )
  

(display "Variant ")
(display(variant))
(newline)
(newline)
(display((count-change 100)))
(newline)
(display((count-change gr-amount)))
(set kinds-of-coins 13)
(display((count-change 100)))
(newline)
(display("(c) Permyakov N.A. 2021\n"))